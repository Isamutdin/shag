# Generated by Django 4.1.4 on 2022-12-21 16:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=40, unique=True, verbose_name='email')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='phone')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Фамилия')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('status', models.CharField(choices=[('TC', 'Учитель'), ('ST', 'Ученик'), ('A', 'Администратор'), ('SR', 'Представитель школы'), ('R', 'Резерв')], default='ST', max_length=2, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('username', 'email', 'phone')},
            },
        ),
    ]
